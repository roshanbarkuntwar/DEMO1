/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package regular.validateError;

import com.lhs.taxcpcv2.bean.Assessment;
import globalUtilities.Util;
import hibernateObjects.ViewClientMast;
import java.text.SimpleDateFormat;

/**
 *
 * @author gaurav.khanzode
 */
public class ProcessErrorsDB {

    Util utl;
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");

    public ProcessErrorsDB() {
        utl = new Util();
    }

    public String getUnverifiedPANCountQuery(String entity_code, String client_code) {
        String l_pan_unverified_query = " select count(*)\n"
                + "from pan_mast_unverified a, client_mast b\n"
                + "where b.entity_code=a.entity_code\n"
                + "and b.client_code=a.client_code\n"
                + "and  b.entity_code='" + entity_code + "'\n"
                + "and (b.client_code='" + client_code + "' or\n"
                + "     b.parent_code='" + client_code + "' or\n"
                + "     b.g_parent_code='" + client_code + "' or\n"
                + "     b.sg_parent_code='" + client_code + "' or\n"
                + "     b.ssg_parent_code='" + client_code + "' or\n"
                + "     b.sssg_parent_code='" + client_code + "'\n"
                + "    )";

        return l_pan_unverified_query;
    }//end method

    public String getUnverifiedChallanCountQuery(String entity_code, String client_code, String acc_year, String tds_type_code, String quarterNo) {
        String l_challan_not_verified_Query
                = "select count(*)\n"
                + "  from tds_challan_tran_load t, client_mast b\n"
                + " where t.entity_code = b.entity_code\n"
                + "   and t.client_code = b.client_code\n"
                + "   and t.entity_code = '" + entity_code + "'\n"
                + "   and (b.client_code = '" + client_code + "' or b.parent_code = '" + client_code + "' or\n"
                + "       b.g_parent_code = '" + client_code + "' or b.sg_parent_code = '" + client_code + "' or\n"
                + "       b.ssg_parent_code = '" + client_code + "' or b.sssg_parent_code = '" + client_code + "')\n"
                + "   and t.acc_year = '" + acc_year + "'\n"
                + "   and t.quarter_no = '" + quarterNo + "'\n"
                + "   and t.tds_type_code = '" + tds_type_code + "'\n"
                + "   and t.CSI_VERIFY_FLAG = 'P' \n";

        return l_challan_not_verified_Query;
    }//end method

    public String getUnverifiedLowerDeductionCountQuery(String client_code) {
        String l_lower_deduction_not_verified_Query = "SELECT count(*)\n"
                + "  FROM TDS_SPL_RATE_MAST M\n"
                + " where exists\n"
                + " (select 1\n"
                + "          from client_mast w1\n"
                + "         where w1.client_code = M.client_code\n"
                + "           and (w1.client_code = '" + client_code + "' or w1.parent_code = '" + client_code + "' or\n"
                + "               w1.g_parent_code = '" + client_code + "' or w1.sg_parent_code = '" + client_code + "' or\n"
                + "               w1.ssg_parent_code = '" + client_code + "' or w1.sssg_parent_code = '" + client_code + "'))\n"
                + "   and nvl(m.flag, 'U') = 'U'\n";
        return l_lower_deduction_not_verified_Query;
    }//end method

    public String getUnallocatedDeducteeCountQuery(String entity_code, String client_code, String acc_year, String quarterNo, String tds_type_code) {
        String l_deductee_not_allocated_Query = "select count(*)\n"
                + "  from tds_tran_load t, client_mast b\n"
                + " where b.entity_code = t.entity_code\n"
                + "   and b.client_code = t.client_code\n"
                + "   and t.entity_code = '" + entity_code + "'\n"
                + "   and (b.client_code = '" + client_code + "' or b.parent_code = '" + client_code + "' or\n"
                + "       b.g_parent_code = '" + client_code + "' or b.sg_parent_code = '" + client_code + "' or\n"
                + "       b.ssg_parent_code = '" + client_code + "' or b.sssg_parent_code = '" + client_code + "')\n"
                + "   and t.acc_year = '" + acc_year + "'\n"
                + "   and t.quarter_no = '" + quarterNo + "'\n"
                + "   and t.tds_type_code = '" + tds_type_code + "'\n"
                + "   and t.tds_challan_rowid_seq is null \n";

        return l_deductee_not_allocated_Query;
    }//end method

    public String getUnallocatedRefNoCountQuery(String entity_code, String client_code, String acc_year, String quarterNo, String tds_type_code) {
        String l_refno_not_allocated_Query = "select count(t.deductee_panno) refcount \n"
                + "  from tds_tran_load t, client_mast b\n"
                + " where b.entity_code = t.entity_code\n"
                + "   and b.client_code = t.client_code\n"
                + "   and t.entity_code = '" + entity_code + "'\n"
                + "   and (b.client_code = '" + client_code + "' or b.parent_code = '" + client_code + "' or\n"
                + "       b.g_parent_code = '" + client_code + "' or b.sg_parent_code = '" + client_code + "' or\n"
                + "       b.ssg_parent_code = '" + client_code + "' or b.sssg_parent_code = '" + client_code + "')\n"
                + "   and t.acc_year = '" + acc_year + "'\n"
                + "   and t.quarter_no = '" + quarterNo + "'\n"
                + "   and t.tds_type_code = '" + tds_type_code + "'\n"
                + "   and nvl(t.tds_deduct_reason,'#') in ('B','D','A')\n"
                + "   and t.certificate_no is null \n";

        return l_refno_not_allocated_Query;
    }//end method

    public String getDeducteeDetailsQuery(Assessment asmt, ViewClientMast client) {
        String salaryDtlQry = "";
        int quarter_no = Integer.parseInt(asmt.getQuarterNo());

        if (!utl.isnull(asmt.getTdsTypeCode()) && asmt.getTdsTypeCode().equalsIgnoreCase("24Q") && quarter_no == 4) {
            salaryDtlQry = "union all \n"
                    + "select '02' user_seq, 'SALARY_TRAN_LOAD' data_type,'Salary Summary Transaction(s)' data_type_name,\n"
                    + "LHS_TDS.GET_TDS_RECO_DETAILS('" + client.getEntity_code() + "','" + client.getClient_code() + "','" + asmt.getAccYear() + "'," + quarter_no + ",'" + sdf.format(asmt.getQuarterFromDate()).toUpperCase() + "','" + sdf.format(asmt.getQuarterToDate()).toUpperCase() + "','" + asmt.getTdsTypeCode() + "',NULL,'SALARY_TRAN_LOAD','NO_OF_DEDUCTEE') \n"
                    + "from dual";
        }
        String l_deductee_query
                = "select user_seq, data_type,data_type_name ,nvl(rec_count,'0')rec_count\n"
                + "from(\n"
                + "select '01' user_seq, 'TDS-CHALLAN-TRAN-LOAD' data_type,'Challan Transaction(s)' data_type_name ,\n"
                + "       lhs_tds.get_tds_reco_details('" + client.getEntity_code() + "','" + client.getClient_code() + "','" + asmt.getAccYear() + "'," + quarter_no + ",null,null,'" + asmt.getTdsTypeCode() + "',null,'TDS_CHALLAN_TRAN_LOAD','NO_OF_CHALLAN') rec_count\n"
                + "       from dual\n"
                + "union all\n"
                + "select '01' user_seq, 'TDS-TRAN-LOAD' data_type,'Deductee Transaction(s)' data_type_name,\n"
                + "       lhs_tds.get_tds_reco_details('" + client.getEntity_code() + "','" + client.getClient_code() + "','" + asmt.getAccYear() + "'," + quarter_no + ",null,null,'" + asmt.getTdsTypeCode() + "',null,'TDS_TRAN_LOAD','NO_OF_DEDUCTEE') rec_count\n"
                + "       from dual\n"
                + salaryDtlQry
                + ")";

        return l_deductee_query;
    }//end method

    public String getProcessErrorSummaryQuery(String l_entity_code, String l_client_code, String errorTypeProc, Assessment asmt, String processLevel) {

        String appendWhereCls = "";
        if (!utl.isnull(errorTypeProc) && errorTypeProc.equalsIgnoreCase("SE")) {
            appendWhereCls = " and t.error_type_code like '%SE' \n";
        }
//        System.out.println("processLevel-->" + processLevel);
        String processLevelWhereCls = "";
//        if (!utl.isnull(processLevel) && processLevel.equalsIgnoreCase("0")) { // for login level
//            processLevelWhereCls = " and t.validation_client_code= '" + l_client_code + "' \n";
//
//        } else
        if (!utl.isnull(processLevel) && processLevel.equalsIgnoreCase("1")) { // for all level
            processLevelWhereCls = " AND (CM.CLIENT_CODE = '" + l_client_code + "' OR\n"
                    + "                  CM.PARENT_CODE= '" + l_client_code + "' OR\n"
                    + "                  CM.G_PARENT_CODE= '" + l_client_code + "' OR\n"
                    + "                  CM.SG_PARENT_CODE= '" + l_client_code + "' OR\n"
                    + "                  CM.SSG_PARENT_CODE= '" + l_client_code + "' OR\n"
                    + "                  CM.SSSG_PARENT_CODE= '" + l_client_code + "' ) \n";
        } else {
            processLevelWhereCls = " and t.VALIDATION_CLIENT_CODE = '" + l_client_code + "' \n"; // for login level - and default is login level
        }

        String l_query
                = "select quarter_no,\n"
                + "       tds_type_code,\n"
                + "       table_name,\n"
                + "       error_type_code,\n"
                + "       error_type_name,\n"
                + "       sum(nvl(record_count, 0)) record_count\n"
                + "  from (SELECT T.ENTITY_CODE,\n"
                + "               T.CLIENT_CODE,\n"
                + "               T.ACC_YEAR,\n"
                + "               T.QUARTER_NO,\n"
                + "               T.TDS_TYPE_CODE,\n"
                + "               T.ERROR_TYPE_CODE,\n"
                + "               T.ERROR_TYPE_NAME,\n"
                + "               T.TABLE_NAME,\n"
                + "               T.ERROR_CODE,\n"
                + "               T.ERROR_NAME,\n"
                + "               T.POPUP_SHOWN,\n"
                + "               T.UPDATION_ALLOW_FLAG,\n"
                + "               T.SHOW_DETAIL_REQUIRED,\n"
                + "               T.BULK_PAN_VERIFICATION_FLAG,\n"
                + "               T.REVIEW_REQUIRED,\n"
                + "               NVL(T.TOTAL_RECORDS, 0) RECORD_COUNT,\n"
                + "               NVL(T.TOTAL_AMT, 0) DIFF_TDS_AMT,\n"
                + "               ERROR_REVIEWED,\n"
                + "               T.Error_Screen2_Required,\n"
                + "               T.Error_Screen3_Required\n"
                + "          FROM TRAN_LOAD_ERROR_SUMM T, CLIENT_MAST CM\n"
                + "         WHERE CM.ENTITY_CODE=T.ENTITY_CODE\n"
                + "           AND   CM.CLIENT_CODE=T.CLIENT_CODE \n"
                + processLevelWhereCls
                + " and T.ENTITY_CODE = '" + l_entity_code + "'\n"
                + "           AND T.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
                + "           AND T.QUARTER_NO = '" + asmt.getQuarterNo() + "'\n"
                + "           AND T.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'\n" + appendWhereCls
                + "         ORDER BY T.ERROR_CODE, TDS_TYPE_CODE)\n"
                + " group by quarter_no,\n"
                + "          tds_type_code,\n"
                + "          table_name,\n"
                + "          error_type_code,\n"
                + "          error_type_name";

        return l_query;
    }//end method

    public String getFScreenErrorDetailsQuery(String Entity_code, String client_code, String ertp, Assessment asmt, String processLevel) {

        String processLevelWhereCls = "";
        if (!utl.isnull(processLevel) && processLevel.equalsIgnoreCase("0")) { // for login level
            processLevelWhereCls = " and t.validation_client_code= '" + client_code + "' \n";

        } else if (!utl.isnull(processLevel) && processLevel.equalsIgnoreCase("1")) { // for all level
            processLevelWhereCls = " and (b.client_code = '" + client_code + "' or               \n"
                    + "               b.parent_code = '" + client_code + "' or               \n"
                    + "               b.g_parent_code = '" + client_code + "' or               \n"
                    + "               b.sg_parent_code = '" + client_code + "' or               \n"
                    + "               b.ssg_parent_code = '" + client_code + "' or               \n"
                    + "               b.sssg_parent_code = '" + client_code + "' ) \n";
        }

        String l_query
                = "select quarter_no,       \n"
                + "       tds_type_code,       \n"
                + "       error_type_code,       \n"
                + "       error_type_name,       \n"
                + "       table_name,       \n"
                + "       column_name,       \n"
                + "       error_code,       \n"
                + "       error_name,       \n"
                + "       popup_shown,       \n"
                + "       updation_allow_flag,       \n"
                + "       show_detail_required,       \n"
                + "       bulk_pan_verification_flag,       \n"
                + "       review_required,       \n"
                + "       sum(nvl(record_count, 0)) record_count,       \n"
                + "       error_screen2_required,       \n"
                + "       error_screen3_required,       \n"
                + "       entity_code,       \n"
                + "       error_reviewed,       \n"
                + "       sum(nvl(diff_tds_amt, 0)) diff_tds_amt ,bulk_updt_required, bulk_updt_proc_flag\n"
                + "  from (select t.entity_code,               \n"
                + "               t.client_code,               \n"
                + "               t.acc_year,               \n"
                + "               t.quarter_no,               \n"
                + "               t.tds_type_code,               \n"
                + "               t.error_type_code,               \n"
                + "               t.error_type_name,               \n"
                + "               t.table_name,               \n"
                + "               null column_name,               \n"
                + "               t.error_code,               \n"
                + "               t.error_name,               \n"
                + "               t.popup_shown,               \n"
                + "               t.updation_allow_flag,               \n"
                + "               t.show_detail_required,               \n"
                + "               t.bulk_pan_verification_flag,               \n"
                + "               t.Review_required,               \n"
                + "               t.error_screen2_required,               \n"
                + "               t.error_screen3_required,               \n"
                + "               nvl(t.total_records, 0) record_count,               \n"
                + "               nvl(t.total_amt, 0) tds_amt,               \n"
                + "               t.error_reviewed,               \n"
                + "               t.total_amt diff_tds_amt , t.bulk_updt_required, t.bulk_updt_proc_flag       \n"
                + "          from tran_load_error_summ t, client_mast b        \n"
                + "         where b.entity_code = t.entity_code              \n"
                + "           and b.client_code = t.client_code              \n"
                + "           and t.entity_code = '" + Entity_code + "'              \n"
                + processLevelWhereCls
                //                + "           and (b.client_code = '" + client_code + "' or               \n"
                //                + "               b.parent_code = '" + client_code + "' or               \n"
                //                + "               b.g_parent_code = '" + client_code + "' or               \n"
                //                + "               b.sg_parent_code = '" + client_code + "' or               \n"
                //                + "               b.ssg_parent_code = '" + client_code + "' or               \n"
                //                + "               b.sssg_parent_code = '" + client_code + "'               \n"
                //                + "               )              \n"
                + "           and t.acc_year = '" + asmt.getAccYear() + "'              \n"
                + "           and t.quarter_no = " + asmt.getQuarterNo() + "             \n"
                + "           and t.tds_type_code = '" + asmt.getTdsTypeCode() + "'              \n"
                + "           AND T.ERROR_TYPE_CODE = '" + ertp + "'        \n"
                + "        )\n"
                + "\n"
                + " group by entity_code,\n"
                + "          quarter_no,\n"
                + "          tds_type_code,\n"
                + "          table_name,\n"
                + "          error_type_code,\n"
                + "          error_type_name,\n"
                + "          error_screen2_required,\n"
                + "          error_screen3_required,\n"
                + "          error_code,\n"
                + "          error_name,\n"
                + "          popup_shown,\n"
                + "          updation_allow_flag,\n"
                + "          show_detail_required,\n"
                + "          bulk_pan_verification_flag,\n"
                + "          error_reviewed,\n"
                + "          review_required,\n"
                + "          column_name,bulk_updt_required, bulk_updt_proc_flag \n"
                + " ORDER BY ERROR_CODE, ERROR_TYPE_CODE ";

        return l_query;
    }//end method

    public String getReviewErrorQuery(String l_entity_code, String l_client_code, String ertp, Assessment asmt) {
        String reviewErrorQuery = "SELECT sum(avg(ERROR_REVIEWEd))errror_reviewed\n"
                + "  FROM (SELECT T.ENTITY_CODE,\n"
                + "               T.CLIENT_CODE,\n"
                + "               T.ACC_YEAR,\n"
                + "               T.QUARTER_NO,\n"
                + "               T.TDS_TYPE_CODE,\n"
                + "               T.ERROR_TYPE_CODE,\n"
                + "               T.ERROR_TYPE_NAME,\n"
                + "               T.TABLE_NAME,\n"
                + "               NULL COLUMN_NAME,\n"
                + "               T.ERROR_CODE,\n"
                + "               VLM.ERROR_DESCRIPTION ERROR_NAME,\n"
                + "               VLM.POPUP_SHOWN,\n"
                + "               VLM.UPDATION_ALLOW_FLAG,\n"
                + "               VLM.SHOW_DETAIL_REQUIRED,\n"
                + "               VLM.BULK_PAN_VERIFICATION_FLAG,\n"
                + "               VLM.REVIEW_REQUIRED,\n"
                + "               LHS_UTILITY.IS_TRAN_LOAD_ERROR_REVIEWED(T.ENTITY_CODE,\n"
                + "                                                       T.CLIENT_CODE,\n"
                + "                                                       T.ACC_YEAR,\n"
                + "                                                       T.QUARTER_NO,\n"
                + "                                                       T.TDS_TYPE_CODE,\n"
                + "                                                       T.ERROR_CODE) ERROR_REVIEWED,\n"
                + "               NVL(T.TOTAL_RECORDS, 0) RECORD_COUNT,\n"
                + "               NVL(T.TOTAL_AMT, 0) DIFF_TDS_AMT\n"
                + "          FROM TRAN_LOAD_ERROR_SUMM   T,\n"
                + "               VIEW_LHSSYS_ERROR_MAST_TABLE VLM,\n"
                + "               CLIENT_MAST                  W1\n"
                + "         WHERE W1.CLIENT_CODE = T.CLIENT_CODE\n"
                + "           AND (W1.CLIENT_CODE = '" + l_client_code + "' OR W1.PARENT_CODE = '" + l_client_code + "' OR\n"
                + "               W1.G_PARENT_CODE = '" + l_client_code + "' OR W1.SG_PARENT_CODE = '" + l_client_code + "' OR\n"
                + "               W1.SSG_PARENT_CODE = '" + l_client_code + "' OR W1.SSSG_PARENT_CODE = '" + l_client_code + "')\n"
                + "           AND VLM.ERROR_CODE = T.ERROR_CODE\n"
                + "           AND T.ENTITY_CODE = '" + l_entity_code + "'\n"
                + "           AND T.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
                + "           AND T.QUARTER_NO = " + asmt.getQuarterNo() + "\n"
                + "           AND T.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'"
                + "           and T.error_type_code = '" + ertp + "') T\n"
                + "           where ERROR_REVIEWED < 0\n"
                + " GROUP BY T.QUARTER_NO,\n"
                + "          T.TDS_TYPE_CODE,\n"
                + "          T.ERROR_TYPE_CODE,\n"
                + "          T.ERROR_TYPE_NAME,\n"
                + "          T.ERROR_CODE,\n"
                + "          T.ERROR_NAME,\n"
                + "          T.POPUP_SHOWN,\n"
                + "          T.UPDATION_ALLOW_FLAG,\n"
                + "          T.SHOW_DETAIL_REQUIRED,\n"
                + "          T.BULK_PAN_VERIFICATION_FLAG,\n"
                + "          T.REVIEW_REQUIRED,\n"
                + "          t.ERROR_REVIEWED,\n"
                + "          T.TABLE_NAME\n"
                + " ORDER BY T.ERROR_CODE, TDS_TYPE_CODE";

        return reviewErrorQuery;
    }//end method

    public String getReviewFlagCountQuery(String l_client_code, String l_entity_code, Assessment asmt) {
        String l_review_check_query
                = "select count(*) from (select quarter_no,\n"
                + "       tds_type_code,\n"
                + "       table_name,\n"
                + "       error_type_code,\n"
                + "       error_type_name,\n"
                + "       lhs_utility.is_tran_load_error_reviewed(entity_code,client_code,acc_year,quarter_no,tds_type_code,error_code) error_reviewed, \n"
                + "       sum(nvl(record_count,0)) record_count\n"
                + "  from (select t.entity_code,\n"
                + "               t.client_code,\n"
                + "               t.acc_year,\n"
                + "               t.quarter_no,\n"
                + "               t.tds_type_code,\n"
                + "               t.error_type_code,\n"
                + "               t.error_type_name,\n"
                + "               null table_name,\n"
                + "               null column_name,\n"
                + "               t.error_code,\n"
                + "               vlm.error_description error_name,\n"
                + "               vlm.popup_shown,\n"
                + "               vlm.updation_allow_flag,\n"
                + "               vlm.show_detail_required,\n"
                + "               vlm.bulk_pan_verification_flag,\n"
                + "               vlm.Review_required,\n"
                + "               nvl(t.record_count, 0) record_count,\n"
                + "               nvl(t.tds_amt, 0) tds_amt\n"
                + "          from tran_load_error_part2_temp t, view_lhssys_error_mast_table vlm, client_mast w1\n"
                + "          where w1.client_code = t.client_code\n"
                + "          and   (w1.client_code='" + l_client_code + "' or\n"
                + "                 w1.parent_code='" + l_client_code + "' or\n"
                + "                 w1.g_parent_code='" + l_client_code + "' or\n"
                + "                 w1.sg_parent_code='" + l_client_code + "' or\n"
                + "                 w1.ssg_parent_code='" + l_client_code + "' or\n"
                + "                 w1.sssg_parent_code='" + l_client_code + "')\n"
                + "   and vlm.error_code=t.error_code\n"
                + "   and t.entity_code = '" + l_entity_code + "'\n"
                + "   and t.acc_year = '" + asmt.getAccYear() + "'\n"
                + "   and t.quarter_no = " + asmt.getQuarterNo() + "\n"
                + "   and t.tds_type_code = '" + asmt.getTdsTypeCode() + "')\n"
                + "group by entity_code,client_code,acc_year,error_code,quarter_no,\n"
                + "       tds_type_code,\n"
                + "       table_name,\n"
                + "       error_type_code,\n"
                + "       error_type_name) where error_reviewed = -1";

        return l_review_check_query;
    }//end method

    public String getDeducteeTransactionErrorDetailCountQuery(Assessment asmt, String l_entity_code, String l_client_code, FilterTdsErrorDataList objErrFilterList,
            String l_error_type_code, String l_error_code, String l_tds_type_code, String h_client_code, String screenCallFrom, String tds_code, String deductee_panno,
            String additionalWhereClause) {

        String l_query = "";
        if (!utl.isnull(l_error_type_code) && l_error_type_code.equalsIgnoreCase("TSE") || l_error_code.equalsIgnoreCase("L-TVE-1001")) {
            if (l_tds_type_code.equalsIgnoreCase("27Q")) {
                l_query = "select count(*) from(select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.deductee_email_id email_id,\n"
                        + "               a.deductee_address add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + "  and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code "
                        + "                   and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                        + additionalWhereClause
                        + ")";
            } else {
                l_query = "select count(*) from(select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.tin_uin_no email_id,\n"
                        + "               a.tin_uin_no add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code "
                        + "                   and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                        + additionalWhereClause
                        + ")";
            }
        } else {
            if (!utl.isnull(l_error_code) && l_error_code.equalsIgnoreCase("L-TVE-1005")) {
                if (l_tds_type_code.equalsIgnoreCase("27Q")) {

                    String l_query_where1 = "";
                    if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                        l_query_where1 = "           and a.tds_code = '" + tds_code + "' \n"
                                + "            and a.deductee_panno = '" + deductee_panno + "' \n";
                    }
                    l_query = "select count(*) from(select rownum slno,\n"
                            + "               a.rowid_seq,\n"
                            + "               a.tds_code,\n"
                            + "               a.deductee_name,\n"
                            + "               a.deductee_panno,\n"
                            + "               a.tran_ref_date,\n"
                            + "               a.tran_amt,\n"
                            + "               a.tds_deduct_date,\n"
                            + "               a.tds_deduct_reason,\n"
                            + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                            + "               a.certificate_no,\n"
                            + "               a.itax_rate,\n"
                            + "               a.tds_base_amt,\n"
                            + "               a.tds_amt,\n"
                            + "               a.surcharge_amt,\n"
                            + "               a.cess_amt,\n"
                            + "               a.calc_tds_amt,\n"
                            + "               a.diff_tds_amt,\n"
                            + "               a.rate_type,\n"
                            + "               a.nature_of_remittance,\n"
                            + "               a.country_code,\n"
                            + "               a.tds_challan_rowid_seq,\n"
                            + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                            + "               v.popup_message,\n"
                            + "               v.updation_allow_flag,\n"
                            + "               a.tin_uin_no,\n"
                            + "               a.deductee_email_id email_id,\n"
                            + "               a.deductee_address add1\n"
                            + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                            + "         where b.entity_code = a.entity_code\n"
                            + "           and b.client_code = a.client_code\n"
                            + "           and b.acc_year = a.acc_year\n"
                            + "           and b.quarter_no = a.quarter_no\n"
                            + "           and b.tds_type_code = a.tds_type_code\n"
                            + "           and b.rowid_seq = a.rowid_Seq\n"
                            + "           and b.error_code = v.error_code\n"
                            + "           and b.error_code = '" + l_error_code + "'\n"
                            + "           and a.entity_code = '" + l_entity_code + "'\n"
                            + " and exists (select 1 from client_mast w1\n"
                            + "                   where w1.entity_code=a.entity_code "
                            + "                   and w1.client_code=a.validation_client_code \n"
                            + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                            + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                            + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                            + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                            + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                            + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                            + l_query_where1
                            + additionalWhereClause
                            + ")";
                } else {

                    String l_query_where1 = "";
                    if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                        l_query_where1 = "           and a.tds_code = '" + tds_code + "' \n"
                                + "            and a.deductee_panno = '" + deductee_panno + "' \n";
                    }

                    l_query = "select count(*) from(select rownum slno,\n"
                            + "               a.rowid_seq,\n"
                            + "               a.tds_code,\n"
                            + "               a.deductee_name,\n"
                            + "               a.deductee_panno,\n"
                            + "               a.tran_ref_date,\n"
                            + "               a.tran_amt,\n"
                            + "               a.tds_deduct_date,\n"
                            + "               a.tds_deduct_reason,\n"
                            + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                            + "               a.certificate_no,\n"
                            + "               a.itax_rate,\n"
                            + "               a.tds_base_amt,\n"
                            + "               a.tds_amt,\n"
                            + "               a.surcharge_amt,\n"
                            + "               a.cess_amt,\n"
                            + "               a.calc_tds_amt,\n"
                            + "               a.diff_tds_amt,\n"
                            + "               a.rate_type,\n"
                            + "               a.nature_of_remittance,\n"
                            + "               a.country_code,\n"
                            + "               a.tds_challan_rowid_seq,\n"
                            + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                            + "               v.popup_message,\n"
                            + "               v.updation_allow_flag,\n"
                            + "               a.tin_uin_no,\n"
                            + "               a.tin_uin_no email_id,\n"
                            + "               a.tin_uin_no add1\n"
                            + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                            + "         where b.entity_code = a.entity_code\n"
                            + "           and b.client_code = a.client_code\n"
                            + "           and b.acc_year = a.acc_year\n"
                            + "           and b.quarter_no = a.quarter_no\n"
                            + "           and b.tds_type_code = a.tds_type_code\n"
                            + "           and b.rowid_seq = a.rowid_Seq\n"
                            + "           and b.error_code = v.error_code\n"
                            + "           and b.error_code = '" + l_error_code + "'\n"
                            + "           and a.entity_code = '" + l_entity_code + "'\n"
                            + " and exists (select 1 from client_mast w1\n"
                            + "                   where w1.entity_code=a.entity_code "
                            + "                   and w1.client_code=a.validation_client_code \n"
                            + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                            + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                            + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                            + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                            + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                            + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                            + l_query_where1
                            + additionalWhereClause
                            + ")";
                }
            } else if (l_tds_type_code.equalsIgnoreCase("27Q")) {

                String l_query_where1 = "";
                if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                    l_query_where1 = "           and a.tds_code = '" + tds_code + "' \n"
                            + "            and a.deductee_panno = '" + deductee_panno + "' \n";
                }

                l_query = "select count(*) from(select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.deductee_email_id email_id,\n"
                        + "               a.deductee_address add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code "
                        + "                   and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                        + l_query_where1
                        + additionalWhereClause
                        + ")";
            } else {

                String l_query_where1 = "";
                if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                    l_query_where1 = "           and a.tds_code = '" + tds_code + "' \n"
                            + "            and a.deductee_panno = '" + deductee_panno + "' \n";
                }

                l_query = "select count(*) from(select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.tin_uin_no email_id,\n"
                        + "               a.tin_uin_no add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + "  and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code "
                        + "                   and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "' \n"
                        + l_query_where1
                        + additionalWhereClause
                        + ")";
            }
        }
        return l_query;
    }//end method

    public String getDeducteeTransactionErrorDetailQuery(Assessment asmt, String l_entity_code, String l_client_code, FilterTdsErrorDataList objErrFilterList,
            String l_error_type_code, String l_error_code, String l_tds_type_code, String h_client_code, String screenCallFrom, String tds_code, String deductee_panno,
            String additionalWhereClause, int l_record_MNL, int l_record_MXL) {

        String l_query = "";
        if (!utl.isnull(l_error_type_code) && l_error_type_code.equalsIgnoreCase("TSE") || l_error_type_code.equalsIgnoreCase("L-TVE-1001")) {
            if (l_tds_type_code.equalsIgnoreCase("27Q")) {

                l_query = "select *\n"
                        + "  from (select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.deductee_email_id email_id,\n"
                        + "               a.deductee_address add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                        + additionalWhereClause + ")\n"
                        + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
            } else {
                l_query = "select *\n"
                        + "  from (select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.tin_uin_no email_id,\n"
                        + "               a.tin_uin_no add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code\n"
                        + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                        + additionalWhereClause + ")\n"
                        + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
            }
        } else if (!utl.isnull(l_error_code) && l_error_code.equalsIgnoreCase("L-TVE-1005")) {
            if (l_tds_type_code.equalsIgnoreCase("27Q")) {

                String l_query_where1 = "";
                if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                    l_query_where1 = "           and a.tds_code = '" + tds_code + "'\n"
                            + "           and a.deductee_panno = '" + deductee_panno + "'\n";
                }
                l_query = "select *\n"
                        + "  from (select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.tds_rate,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.deductee_email_id email_id,\n"
                        + "               a.deductee_address add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v \n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                        + l_query_where1
                        + additionalWhereClause + "  order by tran_amt desc, a.deductee_panno,a.tran_ref_date)\n"
                        + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
            } else {
                String l_query_where1 = "";
                if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                    l_query_where1 = "           and a.tds_code = '" + tds_code + "'\n"
                            + "           and a.deductee_panno = '" + deductee_panno + "'\n";
                }

                l_query = "select *\n"
                        + "  from (select rownum slno,\n"
                        + "               a.rowid_seq,\n"
                        + "               a.tds_code,\n"
                        + "               a.deductee_name,\n"
                        + "               a.deductee_panno,\n"
                        + "               a.tran_ref_date,\n"
                        + "               a.tran_amt,\n"
                        + "               a.tds_deduct_date,\n"
                        + "               a.tds_deduct_reason,\n"
                        + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                        + "               a.certificate_no,\n"
                        + "               a.itax_rate,\n"
                        + "               a.tds_base_amt,\n"
                        + "               a.tds_amt,\n"
                        + "               a.tds_rate,\n"
                        + "               a.surcharge_amt,\n"
                        + "               a.cess_amt,\n"
                        + "               a.calc_tds_amt,\n"
                        + "               a.diff_tds_amt,\n"
                        + "               a.rate_type,\n"
                        + "               a.nature_of_remittance,\n"
                        + "               a.country_code,\n"
                        + "               a.tds_challan_rowid_seq,\n"
                        + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                        + "               v.popup_message,\n"
                        + "               v.updation_allow_flag,\n"
                        + "               a.tin_uin_no,\n"
                        + "               a.tin_uin_no email_id,\n"
                        + "               a.tin_uin_no add1\n"
                        + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                        + "         where b.entity_code = a.entity_code\n"
                        + "           and b.client_code = a.client_code\n"
                        + "           and b.acc_year = a.acc_year\n"
                        + "           and b.quarter_no = a.quarter_no\n"
                        + "           and b.tds_type_code = a.tds_type_code\n"
                        + "           and b.rowid_seq = a.rowid_Seq\n"
                        + "           and b.error_code = v.error_code\n"
                        + "           and b.error_code = '" + l_error_code + "'\n"
                        + "           and a.entity_code = '" + l_entity_code + "'\n"
                        + " and exists (select 1 from client_mast w1\n"
                        + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code \n"
                        + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                        + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                        + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                        + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                        + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                        + l_query_where1
                        + additionalWhereClause + "  order by tran_amt desc, a.deductee_panno,a.tran_ref_date)\n"
                        + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
            }
        } else if (l_tds_type_code.equalsIgnoreCase("27Q")) {

            String l_query_where1 = "";
            if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
                l_query_where1 = "           and a.tds_code = '" + tds_code + "'\n"
                        + "           and a.deductee_panno = '" + deductee_panno + "'\n";
            }
            l_query = "select *\n"
                    + "  from (select rownum slno,\n"
                    + "               a.rowid_seq,\n"
                    + "               a.tds_code,\n"
                    + "               a.deductee_name,\n"
                    + "               a.deductee_panno,\n"
                    + "               a.tran_ref_date,\n"
                    + "               a.tran_amt,\n"
                    + "               a.tds_deduct_date,\n"
                    + "               a.tds_deduct_reason,\n"
                    + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                    + "               a.certificate_no,\n"
                    + "               a.itax_rate,\n"
                    + "               a.tds_base_amt,\n"
                    + "               a.tds_amt,\n"
                    + "               a.tds_rate,\n"
                    + "               a.surcharge_amt,\n"
                    + "               a.cess_amt,\n"
                    + "               a.calc_tds_amt,\n"
                    + "               a.diff_tds_amt,\n"
                    + "               a.rate_type,\n"
                    + "               a.nature_of_remittance,\n"
                    + "               a.country_code,\n"
                    + "               a.tds_challan_rowid_seq,\n"
                    + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                    + "               v.popup_message,\n"
                    + "               v.updation_allow_flag,\n"
                    + "               a.tin_uin_no,\n"
                    + "               a.deductee_email_id email_id,\n"
                    + "               a.deductee_address add1\n"
                    + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                    + "         where b.entity_code = a.entity_code\n"
                    + "           and b.client_code = a.client_code\n"
                    + "           and b.acc_year = a.acc_year\n"
                    + "           and b.quarter_no = a.quarter_no\n"
                    + "           and b.tds_type_code = a.tds_type_code\n"
                    + "           and b.rowid_seq = a.rowid_Seq\n"
                    + "           and b.error_code = v.error_code\n"
                    + "           and b.error_code = '" + l_error_code + "'\n"
                    + "           and a.entity_code = '" + l_entity_code + "'\n"
                    //                                        + "           and a.validation_client_code = '" + h_client_code + "'\n"
                    + " and exists (select 1 from client_mast w1\n"
                    + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code \n"
                    + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                    + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                    + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                    + l_query_where1
                    + additionalWhereClause + "  order by a.deductee_panno,a.tran_ref_date)\n"
                    + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
        } else {

            String l_query_where1 = "";
            if (!utl.isnull(screenCallFrom) && screenCallFrom.equalsIgnoreCase("2")) {
//                                    l_query_where1 = "           and a.deductee_code = '" + l_deductee_code + "'\n"
                l_query_where1 = "           and a.tds_code = '" + tds_code + "'\n"
                        + "           and a.deductee_panno = '" + deductee_panno + "'\n";
            }
            l_query = "select *\n"
                    + "  from (select rownum slno,\n"
                    + "               a.rowid_seq,\n"
                    + "               a.tds_code,\n"
                    + "               a.deductee_name,\n"
                    + "               a.deductee_panno,\n"
                    + "               a.tran_ref_date,\n"
                    + "               a.tran_amt,\n"
                    + "               a.tds_deduct_date,\n"
                    + "               a.tds_deduct_reason,\n"
                    + "               lhs_utility.get_name('tds_deduct_reason',a.tds_deduct_reason)tds_deduct_reason_name,\n"
                    + "               a.certificate_no,\n"
                    + "               a.itax_rate,\n"
                    + "               a.tds_base_amt,\n"
                    + "               a.tds_amt,\n"
                    + "               a.tds_rate,\n"
                    + "               a.surcharge_amt,\n"
                    + "               a.cess_amt,\n"
                    + "               a.calc_tds_amt,\n"
                    + "               a.diff_tds_amt,\n"
                    + "               a.rate_type,\n"
                    + "               a.nature_of_remittance,\n"
                    + "               a.country_code,\n"
                    + "               a.tds_challan_rowid_seq,\n"
                    + "               (SELECT C.tds_challan_tds_amt FROM TDS_CHALLAN_TRAN_LOAD C WHERE C.rowid_seq = a.tds_challan_rowid_seq) tds_challan_tds_amt,\n"
                    + "               v.popup_message,\n"
                    + "               v.updation_allow_flag,\n"
                    + "               a.tin_uin_no,\n"
                    + "               a.tin_uin_no email_id,\n"
                    + "               a.tin_uin_no add1\n"
                    + "          from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                    + "         where b.entity_code = a.entity_code\n"
                    + "           and b.client_code = a.client_code\n"
                    + "           and b.acc_year = a.acc_year\n"
                    + "           and b.quarter_no = a.quarter_no\n"
                    + "           and b.tds_type_code = a.tds_type_code\n"
                    + "           and b.rowid_seq = a.rowid_Seq\n"
                    + "           and b.error_code = v.error_code\n"
                    + "           and b.error_code = '" + l_error_code + "'\n"
                    + "           and a.entity_code = '" + l_entity_code + "'\n"
                    + " and exists (select 1 from client_mast w1\n"
                    + "                   where w1.entity_code=a.entity_code and w1.client_code=a.validation_client_code \n"
                    + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                    + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                    + "           and a.tds_type_code = '" + l_tds_type_code + "'\n"
                    + l_query_where1
                    + additionalWhereClause + "  order by a.deductee_panno,a.tran_ref_date)\n"
                    + " where slno between " + l_record_MNL + " and " + l_record_MXL + "";
        }
        return l_query;
    }//end method

    public String getThirdScreenGrossSumQuery(Assessment asmt, String l_entity_code, String l_client_code,
            String l_error_type_code, String l_error_code, String l_tds_type_code, String h_client_code, String tds_code, String deductee_panno,
            String additionalWhereClause) {

        String l_screen3_gross_sum_query = "";
        if (!utl.isnull(l_error_type_code) && l_error_type_code.equalsIgnoreCase("TSE") || l_error_code.equalsIgnoreCase("L-TVE-1001")) {
            l_screen3_gross_sum_query
                    = "select nvl(sum(a.tran_amt), 0) tran_amt,\n"
                    + "       nvl(sum(a.itax_rate), 0) itax_rate,\n"
                    + "       nvl(sum(a.tds_base_amt), 0) tds_base_amt,\n"
                    + "       nvl(sum(a.tds_amt), 0) tds_amt,\n"
                    + "       nvl(sum(a.surcharge_amt), 0) surcharge_amt,\n"
                    + "       nvl(sum(a.cess_amt), 0) cess_amt\n"
                    + "  from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                    + " where b.entity_code = a.entity_code\n"
                    + "   and b.client_code = a.client_code\n"
                    + "   and b.acc_year = a.acc_year\n"
                    + "   and b.quarter_no = a.quarter_no\n"
                    + "   and b.tds_type_code = a.tds_type_code\n"
                    + "   and b.rowid_seq = a.rowid_Seq\n"
                    + "   and b.error_code = v.error_code\n"
                    + "   and b.error_code = '" + l_error_code + "'\n"
                    + "   and a.entity_code = '" + l_entity_code + "'\n"
                    + " and exists (select 1 from client_mast w1\n"
                    + "                   where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                    + "   and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "   and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                    + "   and a.tds_type_code = '" + l_tds_type_code + "'\n"
                    + additionalWhereClause;
        } else {
            l_screen3_gross_sum_query
                    = "select nvl(sum(a.tran_amt), 0) tran_amt,\n"
                    + "       nvl(sum(a.itax_rate), 0) itax_rate,\n"
                    + "       nvl(sum(a.tds_base_amt), 0) tds_base_amt,\n"
                    + "       nvl(sum(a.tds_amt), 0) tds_amt,\n"
                    + "       nvl(sum(a.surcharge_amt), 0) surcharge_amt,\n"
                    + "       nvl(sum(a.cess_amt), 0) cess_amt\n"
                    + "  from tds_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                    + " where b.entity_code = a.entity_code\n"
                    + "   and b.client_code = a.client_code\n"
                    + "   and b.acc_year = a.acc_year\n"
                    + "   and b.quarter_no = a.quarter_no\n"
                    + "   and b.tds_type_code = a.tds_type_code\n"
                    + "   and b.rowid_seq = a.rowid_Seq\n"
                    + "   and b.error_code = v.error_code\n"
                    + "   and b.error_code = '" + l_error_code + "'\n"
                    + "   and a.entity_code = '" + l_entity_code + "'\n"
                    + " and exists (select 1 from client_mast w1\n"
                    + "                   where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + h_client_code + "' or w1.parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.g_parent_code = '" + h_client_code + "' or w1.sg_parent_code = '" + h_client_code + "' or\n"
                    + "                        w1.ssg_parent_code = '" + h_client_code + "' or w1.sssg_parent_code = '" + h_client_code + "')) \n"
                    + "   and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "   and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                    + "   and a.tds_type_code = '" + l_tds_type_code + "'\n"
                    + "   and a.tds_code = '" + tds_code + "'\n"
                    + "   and a.deductee_panno = '" + deductee_panno + "'\n"
                    + additionalWhereClause;
        }
        return l_screen3_gross_sum_query;
    }//end method

    public String getReviewUpdateQuery(Assessment asmt, String l_entity_code, String l_client_code, String reviewValue, String errorCode) {
        String l_review_query = " update tran_load_error a\n"
                + "   set a.error_review_flag   = 'Y',\n"
                + "       a.error_review_on     = sysdate,\n"
                + "       a.error_review_remark = '" + reviewValue + "'\n"
                + " where entity_code = '" + l_entity_code + "'\n"
                + "   and exists (select 1\n"
                + "          from client_mast w1\n"
                + "         where w1.client_code = a.client_code\n"
                + "           and (w1.client_code = '" + l_client_code + "' or\n"
                + "               w1.parent_code = '" + l_client_code + "' or\n"
                + "               w1.g_parent_code = '" + l_client_code + "' or\n"
                + "               w1.sg_parent_code = '" + l_client_code + "' or\n"
                + "               w1.ssg_parent_code = '" + l_client_code + "' or\n"
                + "               w1.sssg_parent_code = '" + l_client_code + "'))\n"
                + "   and acc_year = '" + asmt.getAccYear() + "'\n"
                + "   and quarter_no = '" + asmt.getQuarterNo() + "'\n"
                + "   and tds_type_code = '" + asmt.getTdsTypeCode() + "'\n"
                + "   and error_code = '" + errorCode + "'";

        return l_review_query;
    }//end method

    public String singleRecordRefreshAfterReviewUpdate(Assessment asmt, String l_entity_code, String l_client_code, String errorCode) {
        String l_review_query = "UPDATE TRAN_LOAD_ERROR_SUMM A\n"
                + "SET A.bulk_updt_required = 'T', error_reviewed = 1\n"
                + " WHERE A.ENTITY_CODE = '" + l_entity_code + "' \n"
                + "   AND A.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
                + "   AND A.QUARTER_NO = " + asmt.getQuarterNo() + "\n"
                + "   AND A.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'\n"
                + "   AND A.ERROR_CODE = '" + errorCode + "'"
                + "   and exists (select 1\n"
                + "               from   client_mast b\n"
                + "               where  b.entity_code=a.entity_code\n"
                + "               and    b.client_code=a.client_code\n"
                + "               and    (b.client_code='" + l_client_code + "' or\n"
                + "                       b.parent_code='" + l_client_code + "' or\n"
                + "                       b.g_parent_code='" + l_client_code + "' or\n"
                + "                       b.sg_parent_code='" + l_client_code + "' or\n"
                + "                       b.ssg_parent_code='" + l_client_code + "' or\n"
                + "                       b.sssg_parent_code='" + l_client_code + "'\n"
                + "                      )\n"
                + "               )";

        return l_review_query;
    }//end method

    public String bulkRecordRefreshAfterReviewUpdate(Assessment asmt, String l_entity_code, String l_client_code, String errorCode) {

        String l_review_query = "UPDATE TRAN_LOAD_ERROR_SUMM A\n"
                + "SET A.bulk_updt_required = 'T', error_reviewed = 1\n"
                + " WHERE A.ENTITY_CODE = '" + l_entity_code + "' \n"
                + "   AND A.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
                + "   AND A.QUARTER_NO = " + asmt.getQuarterNo() + "\n"
                + "   AND A.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'\n"
                + "   AND A.ERROR_TYPE_CODE = '" + errorCode + "'"
                + "   and exists (select 1\n"
                + "               from   client_mast b\n"
                + "               where  b.entity_code=a.entity_code\n"
                + "               and    b.client_code=a.client_code\n"
                + "               and    (b.client_code='" + l_client_code + "' or\n"
                + "                       b.parent_code='" + l_client_code + "' or\n"
                + "                       b.g_parent_code='" + l_client_code + "' or\n"
                + "                       b.sg_parent_code='" + l_client_code + "' or\n"
                + "                       b.ssg_parent_code='" + l_client_code + "' or\n"
                + "                       b.sssg_parent_code='" + l_client_code + "'\n"
                + "                      )\n"
                + "               )";

        /*change query of bulk review all */
//        String l_review_query = "UPDATE TRAN_LOAD_ERROR_SUMM A , client_mast c\n"
//                + "SET A.bulk_updt_required = 'T', error_reviewed = 1\n"
//                + " WHERE A.ENTITY_CODE = C.ENTITY_CODE\n"
//                + "  AND A.CLIENT_CODE = C.CLIENT_CODE\n"
//                + "  AND A.ENTITY_CODE = '" + l_entity_code + "' \n"
//                + "  AND (C.CLIENT_CODE = '" + l_client_code + "' OR\n"
//                + "       C.PARENT_CODE = '" + l_client_code + "' OR\n"
//                + "       C.G_PARENT_CODE = '" + l_client_code + "' OR\n"
//                + "       C.SG_PARENT_CODE = '" + l_client_code + "' OR\n"
//                + "       C.SSG_PARENT_CODE = '" + l_client_code + "' OR\n"
//                + "       C.SSSG_PARENT_CODE  = '" + l_client_code + "'  )\n"
//                + "   AND A.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
//                + "   AND A.QUARTER_NO = " + asmt.getQuarterNo() + "\n"
//                + "   AND A.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'\n"
//                + "   AND A.ERROR_TYPE_CODE = '" + errorCode + "' ";
        return l_review_query;
    }//end method

    public String getAllReviewUpdateQuery(Assessment asmt, String l_entity_code, String l_client_code, String reviewValue, String errorCode) {
        String l_review_query = " update tran_load_error a\n"
                + "   set a.error_review_flag   = 'Y',\n"
                + "       a.error_review_on     = sysdate,\n"
                + "       a.error_review_remark = '" + reviewValue + "'\n"
                + " where entity_code = '" + l_entity_code + "'\n"
                + "   and exists (select 1\n"
                + "          from client_mast w1\n"
                + "         where w1.client_code = a.client_code\n"
                + "           and (w1.client_code = '" + l_client_code + "' or\n"
                + "               w1.parent_code = '" + l_client_code + "' or\n"
                + "               w1.g_parent_code = '" + l_client_code + "' or\n"
                + "               w1.sg_parent_code = '" + l_client_code + "' or\n"
                + "               w1.ssg_parent_code = '" + l_client_code + "' or\n"
                + "               w1.sssg_parent_code = '" + l_client_code + "'))\n"
                + "   and acc_year = '" + asmt.getAccYear() + "'\n"
                + "   and quarter_no = '" + asmt.getQuarterNo() + "'\n"
                + "   and tds_type_code = '" + asmt.getTdsTypeCode() + "'\n"
                + "   and exists\n"
                + " (select 1\n"
                + "          from VIEW_LHSSYS_ERROR_MAST_TABLE VLM\n"
                + "         where vlm.error_code = a.error_code\n"
                + "           and vlm.error_type_code = '" + errorCode + "') ";

        return l_review_query;
    }//end method

    public String getCheckReprocessErrorQuery(Assessment asmt, String l_entity_code, String l_client_code, String reviewValue, String errorCode) {
        String l_review_query = " select count(*)\n"
                + "  from (select quarter_no,\n"
                + "               tds_type_code,\n"
                + "               table_name,\n"
                + "               error_type_code,\n"
                + "               error_type_name,\n"
                + "               sum(nvl(record_count, 0)) record_count\n"
                + "          from (SELECT T.ENTITY_CODE,\n"
                + "                       T.CLIENT_CODE,\n"
                + "                       T.ACC_YEAR,\n"
                + "                       T.QUARTER_NO,\n"
                + "                       T.TDS_TYPE_CODE,\n"
                + "                       T.ERROR_TYPE_CODE,\n"
                + "                       T.ERROR_TYPE_NAME,\n"
                + "                       T.TABLE_NAME,\n"
                + "                       T.ERROR_CODE,\n"
                + "                       T.ERROR_NAME,\n"
                + "                       T.POPUP_SHOWN,\n"
                + "                       T.UPDATION_ALLOW_FLAG,\n"
                + "                       T.SHOW_DETAIL_REQUIRED,\n"
                + "                       T.BULK_PAN_VERIFICATION_FLAG,\n"
                + "                       T.REVIEW_REQUIRED,\n"
                + "                       NVL(T.TOTAL_RECORDS, 0) RECORD_COUNT,\n"
                + "                       NVL(T.TOTAL_AMT, 0) DIFF_TDS_AMT,\n"
                + "                       ERROR_REVIEWED,\n"
                + "                       T.Error_Screen2_Required,\n"
                + "                       T.Error_Screen3_Required\n"
                + "                  FROM TRAN_LOAD_ERROR_SUMM T n, CLIENT_MAST CM\n"
                + "                 WHERE CM.ENTITY_CODE = T.ENTITY_CODE\n"
                + "                   AND CM.CLIENT_CODE = T.CLIENT_CODE\n"
                + "                   AND (CM.CLIENT_CODE = '" + l_client_code + "' OR\n"
                + "                       CM.PARENT_CODE = '" + l_client_code + "' OR\n"
                + "                       CM.G_PARENT_CODE = '" + l_client_code + "' OR\n"
                + "                       CM.SG_PARENT_CODE = '" + l_client_code + "' OR\n"
                + "                       CM.SSG_PARENT_CODE = '" + l_client_code + "' OR\n"
                + "                       CM.SSSG_PARENT_CODE = '" + l_client_code + "')\n"
                + "                   AND T.ENTITY_CODE = '" + l_entity_code + "'\n"
                + "                   AND T.ACC_YEAR = '" + asmt.getAccYear() + "'\n"
                + "                   AND T.QUARTER_NO = '" + asmt.getQuarterNo() + "'\n"
                + "                   AND T.TDS_TYPE_CODE = '" + asmt.getTdsTypeCode() + "'\n"
                + "                 ORDER BY T.ERROR_CODE, TDS_TYPE_CODE)\n"
                + "         group by quarter_no,\n"
                + "                  tds_type_code,\n"
                + "                  table_name,\n"
                + "                  error_type_code,\n"
                + "                  error_type_name) ";

        return l_review_query;
    }//end method

    public String downloadErrorDetailCount15GHQuery(Assessment asmt, String l_entity_code, String l_client_code, String quarterNumber) {
        String count_record_query = "select count(*) from ( select  rownum slno, a.bank_bsr_code,\n"
                + "         a.tds_challan_date,\n"
                + "         a.tds_challan_no,\n"
                + "         a.tds_challan_tds_amt,\n"
                + "         a.tds_challan_other_amt,\n"
                + "         a.tds_challan_int_amt,\n"
                + "         a.deductee_ref_code1,\n"
                + "         a.deductee_panno,\n"
                + "         a.deductee_name,\n"
                + "         a.account_no,\n"
                + "         a.tds_name tds_section,\n"
                + "         a.tran_amt,\n"
                + "         a.tran_ref_date,\n"
                + "         a.tds_deduct_date,\n"
                + "         a.tds_amt,\n"
                + "         a.tds_deduct_reason,\n"
                + "         a.certificate_no,\n"
                + "         a.country_code,\n"
                + "         a.rate_type,\n"
                + "         a.nature_of_remittance,\n"
                + "         a.tin_uin_no,\n"
                + "         a.deductee_address,\n"
                + "         a.deductee_email_id,\n"
                + "         a.deductee_phoneno,\n"
                + "         a.bank_branch_code,\n"
                + "         a.challan_bank_branch_code,\n"
                + "         a.tds_challan_rowid_seq,\n"
                + "       null filler2,\n"
                + "         null filler3,\n"
                + "         b.data_error_remark  filler4,\n"
                + "         null filler5,\n"
                + "          null filler6\n"
                + " from    view_tran_data_excel_all a ,tran_load_error b \n"
                + " where   b.rowid_seq=a.rowid_seq\n"
                + " and     b.table_name='TDS_TRAN_LOAD'\n"
                + "and     a.entity_code='" + l_entity_code + "' \n"
                + "and  (a.client_code = '" + l_client_code + "' OR a.parent_code = '" + l_client_code + "' OR\n"
                + "               a.g_parent_code = '" + l_client_code + "' OR a.sg_parent_code = '" + l_client_code + "' OR\n"
                + "               a.ssg_parent_code = '" + l_client_code + "' OR a.sssg_parent_code = '" + l_client_code + "')\n"
                + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "'\n"
                + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                + "           and a.quarter_no = '" + quarterNumber + "')  \n"
                + "order by filler6,bank_bsr_code,\n"
                + "        tds_challan_date,\n"
                + "         tds_challan_no,\n"
                + "         tds_challan_tds_amt";

        return count_record_query;
    }//end method

    public String downloadErrorDetailDataGridQuery15GH(Assessment asmt, String l_entity_code, String l_client_code, String quarterNumber) {
        String l_record_detail_query = "select bank_bsr_code,\n"
                + "        tds_challan_date,\n"
                + "         tds_challan_no,\n"
                + "         tds_challan_tds_amt,\n"
                + "         tds_challan_other_amt,\n"
                + "         tds_challan_int_amt,\n"
                + "         deductee_ref_code1,\n"
                + "         deductee_panno,\n"
                + "         deductee_name,\n"
                + "         account_no,\n"
                + "         tds_section,\n"
                + "         tran_amt,\n"
                + "         tran_ref_date,\n"
                + "         tds_deduct_date,\n"
                + "         tds_amt,\n"
                + "         tds_deduct_reason,\n"
                + "         certificate_no,\n"
                + "         country_code,\n"
                + "         rate_type,\n"
                + "         nature_of_remittance,\n"
                + "         tin_uin_no,\n"
                + "         deductee_address,\n"
                + "         deductee_email_id,\n"
                + "         deductee_phoneno,\n"
                + "         bank_branch_code,\n"
                + "         challan_bank_branch_code,\n"
                + "         tds_challan_rowid_seq,\n"
                + "          filler2,\n"
                + "          filler3,\n"
                + "          filler4,\n"
                + "          filler5,\n"
                + "          filler6  from ( select  rownum slno, a.bank_bsr_code,\n"
                + "         a.tds_challan_date,\n"
                + "         a.tds_challan_no,\n"
                + "         a.tds_challan_tds_amt,\n"
                + "         a.tds_challan_other_amt,\n"
                + "         a.tds_challan_int_amt,\n"
                + "         a.deductee_ref_code1,\n"
                + "         a.deductee_panno,\n"
                + "         a.deductee_name,\n"
                + "         a.account_no,\n"
                + "         a.tds_name tds_section,\n"
                + "         a.tran_amt,\n"
                + "         a.tran_ref_date,\n"
                + "         a.tds_deduct_date,\n"
                + "         a.tds_amt,\n"
                + "         a.tds_deduct_reason,\n"
                + "         a.certificate_no,\n"
                + "         a.country_code,\n"
                + "         a.rate_type,\n"
                + "         a.nature_of_remittance,\n"
                + "         a.tin_uin_no,\n"
                + "         a.deductee_address,\n"
                + "         a.deductee_email_id,\n"
                + "         a.deductee_phoneno,\n"
                + "         a.bank_branch_code,\n"
                + "         a.challan_bank_branch_code,\n"
                + "         a.tds_challan_rowid_seq,\n"
                + "       null  filler2,\n"
                + "         null filler3,\n"
                + "         b.data_error_remark  filler4,\n"
                + "         null filler5,\n"
                + "         null  filler6\n"
                + " from    view_tran_data_excel_all a ,tran_load_error b \n"
                + " where   b.rowid_seq=a.rowid_seq\n"
                + " and     b.table_name='TDS_TRAN_LOAD'\n"
                + "and     a.entity_code='" + l_entity_code + "' \n"
                + "and  (a.client_code = '" + l_client_code + "' OR a.parent_code = '" + l_client_code + "' OR\n"
                + "               a.g_parent_code = '" + l_client_code + "' OR a.sg_parent_code = '" + l_client_code + "' OR\n"
                + "               a.ssg_parent_code = '" + l_client_code + "' OR a.sssg_parent_code = '" + l_client_code + "')\n"
                + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "'\n"
                + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                + "           and a.quarter_no = '" + quarterNumber + "' ) \n"
                + "order by filler6,bank_bsr_code,\n"
                + "        tds_challan_date,\n"
                + "         tds_challan_no,\n"
                + "         tds_challan_tds_amt";

        return l_record_detail_query;
    }//end method

    public String getErrorDetailSammaryCountQry(Assessment asmt, String l_entity_code, String l_client_code, String l_error_code, String l_process_level) {
        String process_level_whr_clause = "";
        if (!utl.isnull(l_process_level) && l_process_level.equalsIgnoreCase("1")) {
            process_level_whr_clause += " and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.g_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.ssg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.sssg_parent_code = '" + l_client_code + "')\n";// for all level
        } else {
            process_level_whr_clause += " and a.validation_client_code = '" + l_client_code + "'\n";// for login level
        }

        String l_query = "select count(*)\n"
                + "  from (select rownum slno,\n"
                + "               client_code,\n"
                + "               bank_branch_code,\n"
                + "               tds_code,\n"
                + "               tds_name,\n"
                + "               deductee_code,\n"
                + "               deductee_name,\n"
                + "               deductee_panno,\n"
                + "               tran_amt,\n"
                + "               tds_amt,\n"
                + "               calc_tds_amt,\n"
                + "               diff_tds_amt,\n"
                + "               uptolq_tds_amt,\n"
                + "               uptolq_calc_tds_amt,\n"
                + "               uptolq_diff_tds_amt,\n"
                + "               net_diff_tds_amt,\n"
                + "               late_fee_amt,\n"
                + "               late_payment_amt,\n"
                + "               late_payment_ramt,\n"
                + "               late_payment_bamt,\n"
                + "               record_count\n"
                + "          from (select a.client_code,\n"
                + "                       w1.bank_branch_code,\n"
                + "                       tds_code,\n"
                + "                       tds_name,\n"
                + "                       deductee_code,\n"
                + "                       deductee_name,\n"
                + "                       deductee_panno,\n"
                + "                       tran_amt,\n"
                + "                       tds_amt,\n"
                + "                       calc_tds_amt,\n"
                + "                       diff_tds_amt,\n"
                + "                       uptolq_tds_amt,\n"
                + "                       uptolq_calc_tds_amt,\n"
                + "                       nvl(lhs_tds_error_n.lhssys_is_short_deduction(a.entity_code,\n"
                + "                                                                     a.client_code,\n"
                + "                                                                     a.acc_year,\n"
                + "                                                                     a.quarter_no,\n"
                + "                                                                     a.tds_type_code,\n"
                + "                                                                     a.tds_code,\n"
                + "                                                                     a.deductee_panno,\n"
                + "                                                                     'YEAR'),\n"
                + "                           0) uptolq_diff_tds_amt,\n"
                + "                       net_diff_tds_amt,\n"
                + "                       late_fee_amt,\n"
                + "                       late_payment_amt,\n"
                + "                       late_payment_ramt,\n"
                + "                       late_payment_bamt,\n"
                + "                       a.record_count\n"
                + "                  from tran_load_error_part2_temp a, client_mast w1\n"
                + "                 where a.entity_code = '" + l_entity_code + "'\n"
                + "                   and w1.entity_code = a.entity_code\n"
                + "                   and w1.client_code = a.client_code\n"
                + process_level_whr_clause
                + "                   and a.acc_year = '" + asmt.getAccYear() + "'\n"
                + "                   and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                + "                   and a.tds_type_code = '" + asmt.getTdsTypeCode() + "'\n"
                + "                   and a.error_code = '" + l_error_code + "'\n"
                + "                 order by diff_tds_amt desc, deductee_panno))";
        return l_query;
    }//end method

    public String getChallanSecScreenErrorDetailsCountQry(String l_client_code, String l_entity_code, String l_error_code, Assessment asmt) {
        String l_query
                = "select count(*)\n"
                + "  from (select rownum slno,\n"
                + "               a.rowid_seq,\n"
                + "               a.bank_bsr_code,\n"
                + "               a.tds_challan_date,\n"
                + "               a.tds_challan_no,\n"
                + "               a.tds_challan_tds_amt,\n"
                + "               a.tds_code,\n"
                + "               a.tds_challan_int_amt,\n"
                + "               a.tds_challan_other_amt,\n"
                + "               a.tds_challan_minor_head,\n"
                + "               v.popup_message,\n"
                + "               v.updation_allow_flag\n"
                + "          from tds_challan_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                + "         where b.entity_code = a.entity_code\n"
                + "           and b.client_code = a.client_code\n"
                + "           and b.acc_year = a.acc_year\n"
                + "           and b.quarter_no = a.quarter_no\n"
                + "           and b.tds_type_code = a.tds_type_code\n"
                + "           and b.rowid_seq = a.rowid_Seq\n"
                + "           and b.error_code = v.error_code\n"
                + "           and b.error_code = '" + l_error_code + "'\n"
                + "           and a.entity_code = '" + l_entity_code + "'\n"
                + " and exists (select 1 from client_mast w1\n"
                + "                   where w1.client_code = a.client_code\n"
                + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                + "           and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "')";
        return l_query;
    }//end method

    public String getChallanSecScreenErrorDetailsQry(String l_client_code, String l_entity_code, String l_error_code, Assessment asmt,
            int l_record_MNL, int l_record_MXL) {
        String l_query = "";
        if (!utl.isnull(l_error_code) && l_error_code.equalsIgnoreCase("L-CVE-1001")) {
            l_query = "select slno,\n"
                    + "       rowid_seq,\n"
                    + "       bank_bsr_code,\n"
                    + "       tds_challan_date,\n"
                    + "       tds_challan_no,\n"
                    + "       tds_challan_tds_amt,\n"
                    + "       tds_code,\n"
                    + "       tds_section,\n"
                    + "       tds_challan_int_amt,\n"
                    + "       tds_challan_other_amt,\n"
                    + "       calc_late_payment_amt,\n"
                    + "       tds_challan_minor_head,\n"
                    + "       popup_message,\n"
                    + "       updation_allow_flag\n"
                    + "  from (select rownum slno,\n"
                    + "               a.rowid_seq,\n"
                    + "               a.bank_bsr_code,\n"
                    + "               a.tds_challan_date,\n"
                    + "               a.tds_challan_no,\n"
                    + "               a.tds_challan_tds_amt,\n"
                    + "               a.tds_code,\n"
                    + "               a.tds_section,\n"
                    + "               a.tds_challan_int_amt,\n"
                    + "               a.tds_challan_other_amt,\n"
                    + "               lhs_tds_error_n.get_late_payment_amt(a.entity_code,\n"
                    + "                                                  a.client_code,\n"
                    + "                                                  a.acc_year,\n"
                    + "                                                  a.quarter_no,\n"
                    + "                                                  a.tds_type_code,\n"
                    + "                                                  a.rowid_seq,\n"
                    + "                                                  'LATE_PAYMENT_AMT') calc_late_payment_amt,\n"
                    + "               a.tds_challan_minor_head,\n"
                    + "               v.popup_message,\n"
                    + "               v.updation_allow_flag\n"
                    + "          from tds_challan_tran_load  a,\n"
                    + "               tran_load_error        b,\n"
                    + "               view_lhssys_error_mast v\n"
                    + "         where b.entity_code = a.entity_code\n"
                    + "           and b.client_code = a.client_code\n"
                    + "           and b.acc_year = a.acc_year\n"
                    + "           and b.quarter_no = a.quarter_no\n"
                    + "           and b.tds_type_code = a.tds_type_code\n"
                    + "           and b.rowid_seq = a.rowid_Seq\n"
                    + "           and b.error_code = v.error_code\n"
                    + "           and b.error_code = '" + l_error_code + "'\n"
                    + "           and a.entity_code = '" + l_entity_code + "'\n"
                    + "           and exists\n"
                    + "         (select 1\n"
                    + "                  from client_mast w1\n"
                    + "                 where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.ssg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.sssg_parent_code = '" + l_client_code + "'))\n"
                    + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "           and a.quarter_no = " + asmt.getQuarterNo() + "\n"
                    + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "')\n"
                    + "           where slno between " + l_record_MNL + " and " + l_record_MXL + "";
        } else {
            l_query = "select slno,\n"
                    + "       rowid_seq,\n"
                    + "       bank_bsr_code,\n"
                    + "       tds_challan_date,\n"
                    + "       tds_challan_no,\n"
                    + "       tds_challan_tds_amt,\n"
                    + "       tds_code,\n"
                    + "       tds_section,\n"
                    + "       tds_challan_int_amt,\n"
                    + "       tds_challan_other_amt,\n"
                    + "       calc_late_payment_amt,\n"
                    + "       tds_challan_minor_head,\n"
                    + "       popup_message,\n"
                    + "       updation_allow_flag\n"
                    + "  from (select rownum slno,\n"
                    + "               a.rowid_seq,\n"
                    + "               a.bank_bsr_code,\n"
                    + "               a.tds_challan_date,\n"
                    + "               a.tds_challan_no,\n"
                    + "               a.tds_challan_tds_amt,\n"
                    + "               a.tds_code,\n"
                    + "               a.tds_section,\n"
                    + "               a.tds_challan_int_amt,\n"
                    + "               a.tds_challan_other_amt,\n"
                    + "               a.entity_code calc_late_payment_amt,\n"
                    + "               a.tds_challan_minor_head,\n"
                    + "               v.popup_message,\n"
                    + "               v.updation_allow_flag\n"
                    + "          from tds_challan_tran_load  a,\n"
                    + "               tran_load_error        b,\n"
                    + "               view_lhssys_error_mast v\n"
                    + "         where b.entity_code = a.entity_code\n"
                    + "           and b.client_code = a.client_code\n"
                    + "           and b.acc_year = a.acc_year\n"
                    + "           and b.quarter_no = a.quarter_no\n"
                    + "           and b.tds_type_code = a.tds_type_code\n"
                    + "           and b.rowid_seq = a.rowid_Seq\n"
                    + "           and b.error_code = v.error_code\n"
                    + "           and b.error_code = '" + l_error_code + "'\n"
                    + "           and a.entity_code = '" + l_entity_code + "'\n"
                    + "           and exists\n"
                    + "         (select 1\n"
                    + "                  from client_mast w1\n"
                    + "                 where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.ssg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.sssg_parent_code = '" + l_client_code + "'))\n"
                    + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "           and a.quarter_no = " + asmt.getQuarterNo() + "\n"
                    + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "')\n"
                    + "           where slno between " + l_record_MNL + " and " + l_record_MXL + "";
        }
        return l_query;
    }//end method

    public String challanGrossSumQuery(String l_client_code, String l_entity_code, String l_error_code, Assessment asmt,
            int l_record_MNL, int l_record_MXL) {
        String l_challan_gross_sum_query = "";

        if (!utl.isnull(l_error_code) && l_error_code.equalsIgnoreCase("L-CVE-1001")) {

            l_challan_gross_sum_query = "select nvl(sum(tds_challan_tds_amt), 0) tds_challan_tds_amt,\n"
                    + "       nvl(sum(tds_challan_int_amt), 0) tds_challan_int_amt,\n"
                    + "       nvl(sum(tds_challan_other_amt), 0) tds_challan_other_amt,\n"
                    + "       nvl(sum(calc_late_payment_amt), 0) calc_late_payment_amt\n"
                    + "  from (select rownum slno,\n"
                    + "               a.rowid_seq,\n"
                    + "               a.bank_bsr_code,\n"
                    + "               a.tds_challan_date,\n"
                    + "               a.tds_challan_no,\n"
                    + "               a.tds_challan_tds_amt,\n"
                    + "               a.tds_code,\n"
                    + "               a.tds_section,\n"
                    + "               a.tds_challan_int_amt,\n"
                    + "               a.tds_challan_other_amt,\n"
                    + "               lhs_tds_error_n.get_late_payment_amt(a.entity_code,\n"
                    + "                                                  a.client_code,\n"
                    + "                                                  a.acc_year,\n"
                    + "                                                  a.quarter_no,\n"
                    + "                                                  a.tds_type_code,\n"
                    + "                                                  a.rowid_seq,\n"
                    + "                                                  'LATE_PAYMENT_AMT') calc_late_payment_amt,\n"
                    + "               a.tds_challan_minor_head,\n"
                    + "               v.popup_message,\n"
                    + "               v.updation_allow_flag\n"
                    + "          from tds_challan_tran_load  a,\n"
                    + "               tran_load_error        b,\n"
                    + "               view_lhssys_error_mast v\n"
                    + "         where b.entity_code = a.entity_code\n"
                    + "           and b.client_code = a.client_code\n"
                    + "           and b.acc_year = a.acc_year\n"
                    + "           and b.quarter_no = a.quarter_no\n"
                    + "           and b.tds_type_code = a.tds_type_code\n"
                    + "           and b.rowid_seq = a.rowid_Seq\n"
                    + "           and b.error_code = v.error_code\n"
                    + "           and b.error_code = '" + l_error_code + "'\n"
                    + "           and a.entity_code = '" + l_entity_code + "'\n"
                    + "           and exists\n"
                    + "         (select 1\n"
                    + "                  from client_mast w1\n"
                    + "                 where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.ssg_parent_code = '" + l_client_code + "' or\n"
                    + "                       w1.sssg_parent_code = '" + l_client_code + "'))\n"
                    + "           and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "           and a.quarter_no = " + asmt.getQuarterNo() + "\n"
                    + "           and a.tds_type_code = '" + asmt.getTdsTypeCode() + "')";
        } else {
            l_challan_gross_sum_query
                    = "select nvl(sum(a.tds_challan_tds_amt), 0) tds_challan_tds_amt,\n"
                    + "       nvl(sum(a.tds_challan_int_amt), 0) tds_challan_int_amt,\n"
                    + "       nvl(sum(a.tds_challan_other_amt), 0) tds_challan_other_amt\n"
                    + "  from tds_challan_tran_load a, tran_load_error b, view_lhssys_error_mast v\n"
                    + " where b.entity_code = a.entity_code\n"
                    + "   and b.client_code = a.client_code\n"
                    + "   and b.acc_year = a.acc_year\n"
                    + "   and b.quarter_no = a.quarter_no\n"
                    + "   and b.tds_type_code = a.tds_type_code\n"
                    + "   and b.rowid_seq = a.rowid_Seq\n"
                    + "   and b.error_code = v.error_code\n"
                    + "   and b.error_code = '" + l_error_code + "'\n"
                    + "   and a.entity_code = '" + l_entity_code + "'\n"
                    + " and exists (select 1 from client_mast w1\n"
                    + "                   where w1.client_code = a.client_code\n"
                    + "                   and (w1.client_code = '" + l_client_code + "' or w1.parent_code = '" + l_client_code + "' or\n"
                    + "                        w1.g_parent_code = '" + l_client_code + "' or w1.sg_parent_code = '" + l_client_code + "' or\n"
                    + "                        w1.ssg_parent_code = '" + l_client_code + "' or w1.sssg_parent_code = '" + l_client_code + "')) \n"
                    + "   and a.acc_year = '" + asmt.getAccYear() + "'\n"
                    + "   and a.quarter_no = '" + asmt.getQuarterNo() + "'\n"
                    + "   and a.tds_type_code = '" + asmt.getTdsTypeCode() + "'";
        }
        return l_challan_gross_sum_query;
    }//end method
}//end class
